#!/bin/bash -e

usage() {
    F=$(realpath --relative-to=. $0)
    echo "Usage: ${F} [-w|--watch] [-- <options to pass to all units>]"
    echo "Runs all units, pass -w|--watch to watch changes in executable"
    echo "Pass any other options after -- to all units argv"
}

while [ "$1" != "" ]; do
    PARAM=`echo $1 | awk -F= '{print $1}'`
    VALUE=`echo $1 | awk -F= '{print $2}'`
    case $PARAM in
        -h | --help)
            usage
            exit
            ;;
        -w | --watch)
            WATCH=1
            echo "running in watch mode"
            ;;
        --)
            shift
            OPTS="$@"
            break
            ;;
    esac
    shift
done

# check units exist
python3 emulation/get_nodes_pid.py u 1>&2 >/dev/null || ( echo No units found; exit 1 )

mkdir -p /var/log/caian/ /var/lib/caian/

echo "units DBs are in /var/lib/caian/"

cleanup() {
    pkill -u root -f ./emulation/watchdog
}
trap cleanup INT

# copy all stdout/stderr to log
echo "stdout+stderr is saved in /var/log/caian/units"
exec &> >(tee  -a /var/log/caian/units)
echo ------------------------

python3 emulation/get_nodes_pid.py u | while read line; do
    line="${line} ${OPTS}"
    if [[ $WATCH -eq 1 ]]; then
        ./emulation/watchdog --file ./unit/daemon/daemon --command "nsenter $line" &
    else
        nsenter $line &
    fi
done

# TODO: close routers gracefully
wait
